genes$LD <- -0.05 * as.integer(genes$geneName)
genes$POS <- genes$geneStart
locusZoom <- ggplot(snps, aes(x=POS, y=LD, colour=LD)) + geom_point() + theme_bw()
locusZoom
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName))
library(ggplot2)
snps <- data.frame(POS = seq(1, 100),
LD = c(runif(33, 0, 0.4),
runif(9, 0.3, 0.6),
runif(7, 0.7, 1),
runif(12, 0.2, 0.6),
runif(39, 0, 0.5)))
genes <- data.frame(geneName = c("Happy", "Sleepy", "Grumpy", "Wonky"),
geneStart = c(10, 30, 73, -15),
geneEnd = c(34, 48, 98, -1))
genes$LD <- -0.05 * as.integer(genes$geneName)
genes$POS <- genes$geneStart
locusZoom <- ggplot(snps, aes(x=POS, y=LD, colour=LD)) + geom_point() + theme_bw()
locusZoom
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD))
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName))
locusZoom <- ggplot(snps, aes(x=POS, y=LD, colour=LD)) + geom_point() + theme_bw() + geom_smooth()
locusZoom
?geom_smooth
locusZoom <- ggplot(snps, aes(x=POS, y=LD, colour=LD)) + geom_point() + theme_bw() + geom_smooth(alpha=0.5)
locusZoom
locusZoom <- ggplot(snps, aes(x=POS, y=LD, colour=LD)) + geom_point() + theme_bw() + geom_smooth(alpha=0.1)
locusZoom
locusZoom <- ggplot(snps, aes(x=POS, y=LD, colour=LD)) + geom_point() + theme_bw() + geom_smooth(alpha=0.1, colour="darkviolet")
locusZoom
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName))
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName)) +
xlab("Chromosome 12 (Mb)")
library(ggplot2)
snps <- data.frame(POS = seq(-8, 110),
LD = c(runif(9, 0, 0.2),
runif(33, 0, 0.4),
runif(9, 0.3, 0.6),
runif(7, 0.7, 1),
runif(12, 0.2, 0.6),
runif(39, 0, 0.5),
runif(10, 0, 0.2)))
genes <- data.frame(geneName = c("Happy", "Sleepy", "Grumpy", "Wonky"),
geneStart = c(10, 30, 73, -15),
geneEnd = c(34, 48, 98, -1))
genes$LD <- -0.05 * as.integer(genes$geneName)
genes$POS <- genes$geneStart
locusZoom <- ggplot(snps, aes(x=POS, y=LD, colour=LD)) + geom_point() + theme_bw() + geom_smooth(alpha=0.1, colour="darkviolet")
locusZoom
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName)) +
xlab("Chromosome 12 (Mb)")
genes$LD <- -(0.3 / nrow(genes)) * as.integer(genes$geneName)
genes$POS <- genes$geneStart
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName)) +
xlab("Chromosome 12 (Mb)")
genes$LD <- -(0.25 / nrow(genes)) * as.integer(genes$geneName)
genes$POS <- genes$geneStart
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName)) +
xlab("Chromosome 12 (Mb)")
genes$LD <- -(0.05 / nrow(genes)) * as.integer(genes$geneName)
genes$POS <- genes$geneStart
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName)) +
xlab("Chromosome 12 (Mb)")
genes$LD <- -(0.25 / nrow(genes)) * as.integer(genes$geneName)
genes$POS <- genes$geneStart
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName)) +
xlab("Chromosome 12 (Mb)") +
scale_x_continuous(expand=c(0,0))
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName)) +
xlab("Chromosome 12 (Mb)") +
scale_y_continuous(expand=c(0,0))
locusZoom <- ggplot(snps, aes(x=POS, y=LD, colour=LD)) + geom_point() + theme_bw()# + geom_smooth(alpha=0.1, colour="darkviolet")
locusZoom
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName)) +
xlab("Chromosome 12 (Mb)") +
()
locusZoom + geom_segment(data = genes, aes(x = POS, y = LD, xend=geneEnd, yend=LD)) +
geom_text(data = genes, aes(x = (POS + geneEnd)/2, y = LD-0.01, label=geneName)) +
xlab("Chromosome 12 (Mb)")
?glm
?binomial
library(shiny)
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
?textInput
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
?verbatimTextOutput
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
list.files()
file.exists("examples.dexktop")
?file.exists
file.exists("`/examples.dexktop")
file.exists("`/examples.desktop")
file.exists("examples.desktop")
inputFiles <- c(1, 2, FALSE, 4)
lapply(inputFiles[inputFiles != FALSE], function (x) x)
unlist(lapply(inputFiles[inputFiles != FALSE], function (x) x))
inputFiles <- c(1, 2, NA, 4)
unlist(lapply(inputFiles[!is.na(inputFiles)], function (x) x))
unlist(lapply(inputFiles[is.na(inputFiles)], function (x) x))
list.files()
fs <- c("examples.desktop", "pc-client.properties", "junk")
file.exists(fs)
all(file.exists(fs))
any(file.exists(fs))
1e-03
object_memory(fs)
data <- data.frame(xs = 1:1000000, P=0)
?runif
data[1:20000, "P"] <- runif(20000, 1e-03, 5)
data[20001:50000, "P"] <- runif(length(20001:50000), 1e-10, 1e-02)
data[50001:90000, "P"] <- runif(length(10001:90000), 1e-15, 1e-03)
data[50001:90000, "P"] <- runif(length(50001:90000), 1e-15, 1e-03)
data[90001:100000, "P"] <- runif(length(90001:100000), 1e-15, 1e-06)
hist(data$P)
data[1:20000, "P"] <- runif(20000, 1e-03, 0.1)
hist(data$P)
hist(data$P, breaks=1000)
hist(log(data$P), breaks=1000)
xs <- data
filterProjectData <- function (data, gamma = 0.1, eps = 1e-04) {
# Filters unneccessary SNPs (p-values > gamma) to improve the efficiency
# of further processing. Runs recursively until eps is reached.
#
# Parameters:
# -----------
#
#     data: data frame (CHR, SNP, POS, P, Phenotype, Nation)
#         GWAS Summary data (note not lead SNP data)
#     gamma: float
#         value above which SNPs are removed.
#         DEFAULT = 0.1
#     eps: float
#         value below which all SNPs are retained, and recursion stops.
#         DEFAULT = 0.0001
#
# Returns:
# --------
#
#     data: data frame (CHR, SNP, POS, P, Phenotype, Nation)
#         GWAS Summary data.
# stopping conditions
if (gamma <= eps) return (data)
if (nrows(data) < 50000) {
sprintf("There are %s rows in this data set. No need to filter this.", nrows(data))
return (data)
}
# otherwise, recursively filter
return (filterProjectData(data[data$P < gamma, ], gamma = gamma / 10))
}
nrows(data[data$P < 1e-04,])
nrow(data[data$P < 1e-04,])
zs <- filterProjectData(data)
filterProjectData <- function (data, gamma = 0.1, eps = 1e-04) {
# Filters unneccessary SNPs (p-values > gamma) to improve the efficiency
# of further processing. Runs recursively until eps is reached.
#
# Parameters:
# -----------
#
#     data: data frame (CHR, SNP, POS, P, Phenotype, Nation)
#         GWAS Summary data (note not lead SNP data)
#     gamma: float
#         value above which SNPs are removed.
#         DEFAULT = 0.1
#     eps: float
#         value below which all SNPs are retained, and recursion stops.
#         DEFAULT = 0.0001
#
# Returns:
# --------
#
#     data: data frame (CHR, SNP, POS, P, Phenotype, Nation)
#         GWAS Summary data.
# stopping conditions
if (gamma <= eps) return (data)
if (nrow(data) < 50000) {
sprintf("There are %s rows in this data set. No need to filter this.", nrows(data))
return (data)
}
# otherwise, recursively filter
return (filterProjectData(data[data$P < gamma, ], gamma = gamma / 10))
}
zs <- filterProjectData(data)
nrow(data[data$P < 1e-03,])
nrow(data[data$P < 0.1,])
nrow(data[data$P < 0.01,])
nrow(data[data$P < 0.001,])
?chr
colnames(data)
data$LociID <- 0
colnames(data)
"LociID" %in% colnames(data)
!"LociID" %in% colnames(data)
!"LofciID" %in% colnames(data)
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
?actionButton
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
head(windowsByNation)
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
install.packages("dplyr")
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
library(shiny)
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
column
?olumn
?column
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
xs <- c(1:5)
xs[2:4]
xs[2:7]
dx <- data.frame(xs = 1:5, y= 11:15, z = 101:105)
dx
dx[1:3,]
dx[1:7,]
dx[4:7,]
xs <- list(a=data.frame(x=1:5, y=4:8), b=data.frame(q=1:3, w=3:5))
xs$a
xs$a$x
?mclapply
library(parallel)
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
?verbatimTextOutput
shiny::runApp('Documents/GitHub/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
library(shiny)
library(ggplot2)
?textInput
data(iris)
levels(iris$Species)
?observe
head(iris)
shiny::runApp('/mnt/DataDrive/Scratch/ShinySavingFiles')
shiny::runApp('/mnt/DataDrive/Scratch/ShinySavingFiles')
shiny::runApp('/mnt/DataDrive/Scratch/ShinySavingFiles')
shiny::runApp('/mnt/DataDrive/Scratch/ShinySavingFiles')
shiny::runApp('/mnt/DataDrive/Scratch/ShinySavingFiles')
shiny::runApp('/mnt/DataDrive/Scratch/ShinySavingFiles')
shiny::runApp('/mnt/DataDrive/Scratch/ShinySavingFiles')
shiny::runApp('/mnt/DataDrive/Scratch/ShinySavingFiles')
shiny::runApp('/mnt/DataDrive/Scratch/ShinySavingFiles')
library(rsconnect)
devtools::install_github('rstudio/rsconnect')
library(devtools)
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
library(devtools)
install.packages('rmeta')
install.packages('reshape')
install.packages('msm')
?rnorm
xs <- data.frame(a = rnorm(1000, -14.88, 22.20), b = rnorm(-21.49, 24.67), c = rnorm(1000, -296.4, 170.9))
xs <- data.frame(a = rnorm(1000, -14.88, 22.20), b = rnorm(1000, -21.49, 24.67), c = rnorm(1000, -296.4, 170.9))
head(xs)
library(ggplot2)
zs <- melt(xs)
library(reshape2)
zs <- melt(xs)
head(zs)
ggplot(zs, aes(x=variable)) + geom_density(aes(colour=variable), alpha=0.3) + theme_bw()
ggplot(zs, aes(x=variable)) + geom_density(aes(colour=variable), alpha=0.5) + theme_bw()
ggplot(zs, aes(x=variable)) + geom_density(aes(colour=variable)) + theme_bw()
ggplot(zs, aes(x=variable, group=variable)) + geom_density(aes(colour=variable)) + theme_bw()
ggplot(zs, aes(x=value, group=variable)) + geom_density(aes(colour=variable)) + theme_bw()
anova(xs$a, xs$b)
?anova
ttest(xs$a, xs$b)
t.test(xs$a, xs$b)
t.test(xs$a, xs$c)
t.test(xs$c, xs$c)
t.test(xs$c, xs$b)
t.test(xs$c, xs$a)
t.test(xs$b, xs$a)
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
?ifesle
?ifelse
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/Scratch/DebugReseq/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/ReseqExperiments/Diabetes/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/ReseqExperiments/Diabetes/ResequencingMetaAnalysis')
shiny::runApp('/mnt/DataDrive/ReseqExperiments/Diabetes/ResequencingMetaAnalysis')
shiny::runApp('Documents/GitHub/LDCalculator/LDExplorer')
?heatmap
ldFile <- "./Datasets/Genotype_11_64500000-64600000.ld"
data <- ldRead(ldFile)
data <- reshape2::dcast(data[, c("SNP_A", "SNP_B", "R2")], SNP_A ~ SNP_B, value.var = "R2")
rownames(data) <- data[, 1]     # wrangle the data into a dissimilarity matrix
data <- as.matrix(data[, -1])   # --------------------------------------------
data[is.na(data)] <- 0          # set missing LD values as minimum LD
data <- 1 - data                # create dissimilarity measure
colourPalette <- RColorBrewer::brewer.pal(5, "Greys")[5:1]
return (heatmap(data, col=colourPalette))
setwd("/home/nickb/Documents/GitHub/LDCalculator/LDExplorer")
data <- ldRead(ldFile)
data <- reshape2::dcast(data[, c("SNP_A", "SNP_B", "R2")], SNP_A ~ SNP_B, value.var = "R2")
rownames(data) <- data[, 1]     # wrangle the data into a dissimilarity matrix
data <- as.matrix(data[, -1])   # --------------------------------------------
data[is.na(data)] <- 0          # set missing LD values as minimum LD
data <- 1 - data                # create dissimilarity measure
colourPalette <- RColorBrewer::brewer.pal(5, "Greys")[5:1]
return (heatmap(data, col=colourPalette))
heatmap(data, col=colourPalette, Colv=NA)
xs <- ldRead(ldFile)
head(data[, 1:10])
head(xs)
cx <- colnames(data)
head(cx)
head(xs)
unlist(lapply(cx), function(x) which(xs$SNP_B == x))
unlist(lapply(cx, function(x) which(xs$SNP_B == x)))
sx <- unlist(lapply(cx, function(x) which(xs$SNP_B == x)))
heatmap(data, col=colourPalette, Colv = sx)
heatmap(data, col=colourPalette)
heatmap(data, col=colourPalette, Colv = sx)
order9sx
order(sx)
heatmap(data, col=colourPalette, Colv = order(sx))
sx2 <- order(lapply(unique(xs$SNP_B), function(x) which(xs$SNP_B == x)))
sx2 <- order(unlist(lapply(unique(xs$SNP_B), function(x) which(xs$SNP_B == x))))
sx2
xs
cx
data[, xs$SNP_B[1:5]]
dim(data)
dim9xs
dim(xs)
d2 <- data[, xs$SNP_B]
dim(d2)
head(d2[, c(1:5, 46:50)])
d2 <- data[, unique(xs$SNP_B)]
dim(d2)
length(unique(xs$SNP_B))
xs$SNP_B
unique(xs$SNP_B)
ncol(data)
data <- ldRead(ldFile)
snpOrder <- unique(data$SNP_B)  # chromosomal order, to be used to order heatmap columns
# reshape into NxN matrix and reorder columns according to snpOrder
data <- reshape2::dcast(data[, c("SNP_A", "SNP_B", "R2")], SNP_A ~ SNP_B, value.var = "R2")
rownames(data) <- data[, 1]     # wrangle the data into a dissimilarity matrix
data <- as.matrix(data[, -1])   # --------------------------------------------
data[is.na(data)] <- 0          # set missing LD values as minimum LD
data <- 1 - data                # create dissimilarity measure
data <- data[, snpOrder]        # reorder columns in chromosomal order
colourPalette <- RColorBrewer::brewer.pal(5, "Greys")[5:1]
heatmap(data, col=colourPalette, Colv = 1:ncol(data))
shiny::runApp()
shiny::runApp()
?sliderInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
